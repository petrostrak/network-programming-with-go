// Code generated by protoc-gen-go. DO NOT EDIT.
// source: housework/v1/housework.proto

package housework

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chore struct {
	Complete             bool     `protobuf:"varint,1,opt,name=complete,proto3" json:"complete,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chore) Reset()         { *m = Chore{} }
func (m *Chore) String() string { return proto.CompactTextString(m) }
func (*Chore) ProtoMessage()    {}
func (*Chore) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{0}
}

func (m *Chore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chore.Unmarshal(m, b)
}
func (m *Chore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chore.Marshal(b, m, deterministic)
}
func (m *Chore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chore.Merge(m, src)
}
func (m *Chore) XXX_Size() int {
	return xxx_messageInfo_Chore.Size(m)
}
func (m *Chore) XXX_DiscardUnknown() {
	xxx_messageInfo_Chore.DiscardUnknown(m)
}

var xxx_messageInfo_Chore proto.InternalMessageInfo

func (m *Chore) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *Chore) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Chores struct {
	Chores               []*Chore `protobuf:"bytes,1,rep,name=chores,proto3" json:"chores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chores) Reset()         { *m = Chores{} }
func (m *Chores) String() string { return proto.CompactTextString(m) }
func (*Chores) ProtoMessage()    {}
func (*Chores) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{1}
}

func (m *Chores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chores.Unmarshal(m, b)
}
func (m *Chores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chores.Marshal(b, m, deterministic)
}
func (m *Chores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chores.Merge(m, src)
}
func (m *Chores) XXX_Size() int {
	return xxx_messageInfo_Chores.Size(m)
}
func (m *Chores) XXX_DiscardUnknown() {
	xxx_messageInfo_Chores.DiscardUnknown(m)
}

var xxx_messageInfo_Chores proto.InternalMessageInfo

func (m *Chores) GetChores() []*Chore {
	if m != nil {
		return m.Chores
	}
	return nil
}

func init() {
	proto.RegisterType((*Chore)(nil), "housework.Chore")
	proto.RegisterType((*Chores)(nil), "housework.Chores")
}

func init() {
	proto.RegisterFile("housework/v1/housework.proto", fileDescriptor_2a74e670ec1cbc46)
}

var fileDescriptor_2a74e670ec1cbc46 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xbd, 0x4e, 0x03, 0x31,
	0x10, 0x84, 0x75, 0x20, 0x4e, 0x89, 0xd3, 0xa0, 0xab, 0x4e, 0x88, 0xc2, 0x4a, 0xe5, 0xc6, 0x67,
	0x08, 0x15, 0x2d, 0x3f, 0x2f, 0x70, 0x74, 0x14, 0x08, 0xc7, 0xac, 0x6c, 0x2b, 0xf1, 0xad, 0xb5,
	0xde, 0x10, 0x89, 0xa7, 0x47, 0xb1, 0xd0, 0x41, 0x41, 0xb7, 0x33, 0x3b, 0x9a, 0xd1, 0x27, 0xae,
	0x03, 0x1e, 0x0a, 0x1c, 0x91, 0x76, 0xe6, 0xf3, 0xd6, 0xcc, 0x62, 0xc8, 0x84, 0x8c, 0xdd, 0x72,
	0x36, 0xd6, 0xcf, 0xe2, 0xe2, 0x31, 0x20, 0x41, 0x77, 0x25, 0x16, 0x0e, 0x53, 0xde, 0x03, 0x43,
	0xdf, 0xc8, 0x46, 0x2d, 0xc6, 0x59, 0x77, 0x52, 0xac, 0x3e, 0xa0, 0x38, 0x8a, 0x99, 0x23, 0x4e,
	0xfd, 0x99, 0x6c, 0xd4, 0x72, 0xfc, 0x6b, 0xad, 0x37, 0xa2, 0xad, 0x35, 0xa5, 0x53, 0xa2, 0x75,
	0xf5, 0xea, 0x1b, 0x79, 0xae, 0x56, 0x9b, 0xcb, 0xe1, 0x77, 0xbd, 0x46, 0xc6, 0x9f, 0xff, 0xc3,
	0xfb, 0xeb, 0x9b, 0x8f, 0x1c, 0x0e, 0xdb, 0xc1, 0x61, 0x32, 0x19, 0x98, 0xb0, 0x30, 0xd9, 0x9d,
	0x99, 0x80, 0x4f, 0x71, 0x9d, 0x09, 0x3d, 0xd9, 0x94, 0xe2, 0xe4, 0xf5, 0x31, 0x72, 0xd0, 0x1e,
	0xcd, 0xcd, 0xbd, 0x7e, 0xb2, 0x6c, 0xf5, 0x0b, 0x50, 0xb4, 0xfb, 0xf8, 0x65, 0x4f, 0xf3, 0xe6,
	0x7f, 0xda, 0x6d, 0x5b, 0x71, 0xef, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x10, 0xd6, 0xff, 0x16,
	0x0e, 0x01, 0x00, 0x00,
}
