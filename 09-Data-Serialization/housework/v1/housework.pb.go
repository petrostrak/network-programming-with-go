// Code generated by protoc-gen-go. DO NOT EDIT.
// source: housework/v1/housework.proto

// protoc --go_out=. --go_opt=paths=source_relative housework/v1/housework.proto

package housework

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Chore struct {
	Complete             bool     `protobuf:"varint,1,opt,name=complete,proto3" json:"complete,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chore) Reset()         { *m = Chore{} }
func (m *Chore) String() string { return proto.CompactTextString(m) }
func (*Chore) ProtoMessage()    {}
func (*Chore) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{0}
}

func (m *Chore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chore.Unmarshal(m, b)
}
func (m *Chore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chore.Marshal(b, m, deterministic)
}
func (m *Chore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chore.Merge(m, src)
}
func (m *Chore) XXX_Size() int {
	return xxx_messageInfo_Chore.Size(m)
}
func (m *Chore) XXX_DiscardUnknown() {
	xxx_messageInfo_Chore.DiscardUnknown(m)
}

var xxx_messageInfo_Chore proto.InternalMessageInfo

func (m *Chore) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *Chore) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Chores struct {
	Chores               []*Chore `protobuf:"bytes,1,rep,name=chores,proto3" json:"chores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chores) Reset()         { *m = Chores{} }
func (m *Chores) String() string { return proto.CompactTextString(m) }
func (*Chores) ProtoMessage()    {}
func (*Chores) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{1}
}

func (m *Chores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chores.Unmarshal(m, b)
}
func (m *Chores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chores.Marshal(b, m, deterministic)
}
func (m *Chores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chores.Merge(m, src)
}
func (m *Chores) XXX_Size() int {
	return xxx_messageInfo_Chores.Size(m)
}
func (m *Chores) XXX_DiscardUnknown() {
	xxx_messageInfo_Chores.DiscardUnknown(m)
}

var xxx_messageInfo_Chores proto.InternalMessageInfo

func (m *Chores) GetChores() []*Chore {
	if m != nil {
		return m.Chores
	}
	return nil
}

type CompleteRequest struct {
	ChoreNumber          int32    `protobuf:"varint,1,opt,name=chore_number,json=choreNumber,proto3" json:"chore_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteRequest) Reset()         { *m = CompleteRequest{} }
func (m *CompleteRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteRequest) ProtoMessage()    {}
func (*CompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{2}
}

func (m *CompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteRequest.Unmarshal(m, b)
}
func (m *CompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteRequest.Marshal(b, m, deterministic)
}
func (m *CompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteRequest.Merge(m, src)
}
func (m *CompleteRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteRequest.Size(m)
}
func (m *CompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteRequest proto.InternalMessageInfo

func (m *CompleteRequest) GetChoreNumber() int32 {
	if m != nil {
		return m.ChoreNumber
	}
	return 0
}

type Response struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2a74e670ec1cbc46, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Chore)(nil), "housework.Chore")
	proto.RegisterType((*Chores)(nil), "housework.Chores")
	proto.RegisterType((*CompleteRequest)(nil), "housework.CompleteRequest")
	proto.RegisterType((*Response)(nil), "housework.Response")
	proto.RegisterType((*Empty)(nil), "housework.Empty")
}

func init() {
	proto.RegisterFile("housework/v1/housework.proto", fileDescriptor_2a74e670ec1cbc46)
}

var fileDescriptor_2a74e670ec1cbc46 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xab, 0x40,
	0x14, 0xc5, 0xc3, 0xeb, 0x6b, 0x0b, 0xb7, 0x2f, 0x79, 0xef, 0x8d, 0x1b, 0x42, 0x5c, 0x20, 0x71,
	0x41, 0x62, 0x28, 0x5a, 0xdd, 0x18, 0x57, 0x5a, 0xbb, 0x53, 0x17, 0xe3, 0xce, 0x85, 0x3a, 0xc0,
	0x04, 0x26, 0x2d, 0x5c, 0x9c, 0x19, 0x6c, 0xf4, 0xf3, 0xf8, 0x41, 0x4d, 0xc7, 0x16, 0x51, 0xbb,
	0x9b, 0x7b, 0xee, 0x9f, 0xf3, 0xcb, 0x1c, 0xd8, 0x2d, 0xb0, 0x51, 0x7c, 0x89, 0x72, 0x1e, 0x3f,
	0x1f, 0xc5, 0x6d, 0x31, 0xae, 0x25, 0x6a, 0x24, 0x4e, 0x2b, 0x04, 0x33, 0xe8, 0x4f, 0x0b, 0x94,
	0x9c, 0x78, 0x60, 0xa7, 0x58, 0xd6, 0x0b, 0xae, 0xb9, 0x6b, 0xf9, 0x56, 0x68, 0xd3, 0xb6, 0x26,
	0x3e, 0x8c, 0x32, 0xae, 0x52, 0x29, 0x6a, 0x2d, 0xb0, 0x72, 0x7f, 0xf9, 0x56, 0xe8, 0xd0, 0xae,
	0x14, 0x4c, 0x60, 0x60, 0xce, 0x28, 0x12, 0xc2, 0x20, 0x35, 0x2f, 0xd7, 0xf2, 0x7b, 0xe1, 0x68,
	0xf2, 0x6f, 0xfc, 0xe9, 0x6e, 0x46, 0xe8, 0xba, 0x1f, 0x9c, 0xc0, 0xdf, 0xe9, 0xda, 0x81, 0xf2,
	0xa7, 0x86, 0x2b, 0x4d, 0xf6, 0xe0, 0x8f, 0x69, 0x3e, 0x54, 0x4d, 0x99, 0x70, 0x69, 0x40, 0xfa,
	0x74, 0x64, 0xb4, 0x1b, 0x23, 0x05, 0xfb, 0x60, 0x53, 0xae, 0x6a, 0xac, 0x14, 0x27, 0x2e, 0x0c,
	0x4b, 0xae, 0x14, 0xcb, 0x3f, 0x90, 0x1d, 0xba, 0x29, 0x83, 0x21, 0xf4, 0x67, 0x65, 0xad, 0x5f,
	0x26, 0x6f, 0x16, 0x38, 0x14, 0x13, 0xd4, 0xd7, 0x4c, 0x64, 0x24, 0x82, 0xde, 0x79, 0x96, 0x91,
	0xff, 0xdf, 0x99, 0x94, 0xb7, 0xd3, 0x91, 0xda, 0xfb, 0x67, 0x60, 0x6f, 0x08, 0x89, 0xd7, 0xdd,
	0xf9, 0x8a, 0xbd, 0x7d, 0xf9, 0x00, 0x7e, 0x5f, 0x09, 0xa5, 0x49, 0xf7, 0x03, 0x0c, 0x93, 0xf7,
	0xd3, 0xfe, 0xe2, 0xf1, 0xee, 0x3e, 0x17, 0xba, 0x68, 0x92, 0x71, 0x8a, 0x65, 0x5c, 0x73, 0x2d,
	0x51, 0x69, 0xc9, 0xe6, 0x71, 0xc5, 0xf5, 0x6a, 0x2e, 0xaa, 0x25, 0xe6, 0x92, 0x95, 0xa5, 0xa8,
	0xf2, 0x68, 0x29, 0x74, 0x11, 0xe5, 0x18, 0x1f, 0x9e, 0x46, 0x97, 0x4c, 0xb3, 0xe8, 0x96, 0x4b,
	0xc1, 0x16, 0xe2, 0x95, 0xad, 0xa2, 0x88, 0xb7, 0x27, 0x9f, 0x0c, 0x4c, 0xf4, 0xc7, 0xef, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xb1, 0xbe, 0x08, 0xe0, 0x1a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RobotMaidClient is the client API for RobotMaid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RobotMaidClient interface {
	Add(ctx context.Context, in *Chores, opts ...grpc.CallOption) (*Response, error)
	Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*Response, error)
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Chores, error)
}

type robotMaidClient struct {
	cc grpc.ClientConnInterface
}

func NewRobotMaidClient(cc grpc.ClientConnInterface) RobotMaidClient {
	return &robotMaidClient{cc}
}

func (c *robotMaidClient) Add(ctx context.Context, in *Chores, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/housework.RobotMaid/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *robotMaidClient) Complete(ctx context.Context, in *CompleteRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/housework.RobotMaid/Complete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *robotMaidClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Chores, error) {
	out := new(Chores)
	err := c.cc.Invoke(ctx, "/housework.RobotMaid/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RobotMaidServer is the server API for RobotMaid service.
type RobotMaidServer interface {
	Add(context.Context, *Chores) (*Response, error)
	Complete(context.Context, *CompleteRequest) (*Response, error)
	List(context.Context, *Empty) (*Chores, error)
}

// UnimplementedRobotMaidServer can be embedded to have forward compatible implementations.
type UnimplementedRobotMaidServer struct {
}

func (*UnimplementedRobotMaidServer) Add(ctx context.Context, req *Chores) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedRobotMaidServer) Complete(ctx context.Context, req *CompleteRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Complete not implemented")
}
func (*UnimplementedRobotMaidServer) List(ctx context.Context, req *Empty) (*Chores, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterRobotMaidServer(s *grpc.Server, srv RobotMaidServer) {
	s.RegisterService(&_RobotMaid_serviceDesc, srv)
}

func _RobotMaid_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chores)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotMaidServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housework.RobotMaid/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotMaidServer).Add(ctx, req.(*Chores))
	}
	return interceptor(ctx, in, info, handler)
}

func _RobotMaid_Complete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotMaidServer).Complete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housework.RobotMaid/Complete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotMaidServer).Complete(ctx, req.(*CompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RobotMaid_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RobotMaidServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/housework.RobotMaid/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RobotMaidServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RobotMaid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "housework.RobotMaid",
	HandlerType: (*RobotMaidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _RobotMaid_Add_Handler,
		},
		{
			MethodName: "Complete",
			Handler:    _RobotMaid_Complete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RobotMaid_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "housework/v1/housework.proto",
}
